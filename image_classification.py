# -*- coding: utf-8 -*-
"""Image classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Mo97j_E4howYjebkKqBxVBhLDStHQjpu
"""

from google.colab import drive
drive.mount('/content/drive')

from PIL import Image

Inputimg = Image.open("/content/drive/My Drive/Data/Pizza.webp")

import matplotlib.pyplot as plt

plt.imshow(Inputimg)

"""Preprocessing"""

from torchvision import transforms
transform= transforms.Compose([
 transforms.Resize(256),
transforms.CenterCrop(224),
transforms.ToTensor(),
transforms.Normalize(
mean = [0.485,0.456,0.406],
std =[0.229,0.224,0.225]
      )
])

Inputimg_t =transform(Inputimg)

print(Inputimg_t.shape)

import torch
InputImg_bt= torch.unsqueeze(Inputimg_t,0)
print(InputImg_bt.shape)

"""load models from torchvision library"""

from torchvision import models
dir(models)

"""load ResNet model"""

resnet =models.resnet50(pretrained=True)
resnet.eval()

output =resnet(InputImg_bt)

with open('/content/drive/My Drive/Data/imagenet1000Classes.txt') as classesfile:
  ImageNetclasses =[line.strip() for line in classesfile.readlines()]

_,predicted = torch.max(output,1)
percentage = torch.softmax(output,dim=1)[0]*100
print(ImageNetclasses[predicted[0]],percentage[predicted[0]].item())